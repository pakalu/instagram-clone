{"ast":null,"code":"const util = require(`util`);\n\nclass ColorConsole {\n  static log() {\n    ColorConsole.writeNormal([...arguments], 39); // white\n  }\n\n  static info() {\n    ColorConsole.writeNormal([...arguments], 36); // cyan\n  }\n\n  static success() {\n    ColorConsole.writeNormal([...arguments], 32); // green\n  }\n\n  static warn() {\n    ColorConsole.writeNormal([...arguments], 33); // yellow\n  }\n\n  static error() {\n    ColorConsole.writeError([...arguments], 31); // red\n  }\n\n  static writeNormal(params, color) {\n    // istanbul ignore else\n    if (process.stdout.isTTY) {\n      console.log.apply(null, ColorConsole.formatColor(params, color)); // eslint-disable-line no-console\n    } else {\n      console.log.apply(null, params); // eslint-disable-line no-console\n    }\n  }\n\n  static writeError(params, color) {\n    // istanbul ignore else\n    if (process.stderr.isTTY) {\n      console.error.apply(null, ColorConsole.formatColor(params, color)); // eslint-disable-line no-console\n    } else {\n      console.error.apply(null, params); // eslint-disable-line no-console\n    }\n  }\n\n  static formatColor(args, color) {\n    return args.map(a => `\\x1b[${color}m${util.format(a)}\\x1b[0m`);\n  }\n\n}\n\nColorConsole.log.bright = function () {\n  ColorConsole.writeNormal([...arguments], 97); // light white\n};\n\nColorConsole.info.bright = function () {\n  ColorConsole.writeNormal([...arguments], 93); // light cyan\n};\n\nColorConsole.success.bright = function () {\n  ColorConsole.writeNormal([...arguments], 92); // light green\n};\n\nColorConsole.warn.bright = function () {\n  ColorConsole.writeNormal([...arguments], 93); // light yellow\n};\n\nColorConsole.error.bright = function () {\n  ColorConsole.writeError([...arguments], 91); // light red\n};\n\nmodule.exports = {\n  ColorConsole\n};","map":{"version":3,"sources":["/Users/rafidhossain/Desktop/Instagram/instagram/Back End/node_modules/pg-promise/lib/utils/color.js"],"names":["util","require","ColorConsole","log","writeNormal","arguments","info","success","warn","error","writeError","params","color","process","stdout","isTTY","console","apply","formatColor","stderr","args","map","a","format","bright","module","exports"],"mappings":"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","sourcesContent":["const util = require(`util`);\r\n\r\nclass ColorConsole {\r\n\r\n    static log() {\r\n        ColorConsole.writeNormal([...arguments], 39); // white\r\n    }\r\n\r\n    static info() {\r\n        ColorConsole.writeNormal([...arguments], 36); // cyan\r\n    }\r\n\r\n    static success() {\r\n        ColorConsole.writeNormal([...arguments], 32); // green\r\n    }\r\n\r\n    static warn() {\r\n        ColorConsole.writeNormal([...arguments], 33); // yellow\r\n    }\r\n\r\n    static error() {\r\n        ColorConsole.writeError([...arguments], 31); // red\r\n    }\r\n\r\n    static writeNormal(params, color) {\r\n        // istanbul ignore else\r\n        if (process.stdout.isTTY) {\r\n            console.log.apply(null, ColorConsole.formatColor(params, color)); // eslint-disable-line no-console\r\n        } else {\r\n            console.log.apply(null, params); // eslint-disable-line no-console\r\n        }\r\n    }\r\n\r\n    static writeError(params, color) {\r\n        // istanbul ignore else\r\n        if (process.stderr.isTTY) {\r\n            console.error.apply(null, ColorConsole.formatColor(params, color)); // eslint-disable-line no-console\r\n        } else {\r\n            console.error.apply(null, params); // eslint-disable-line no-console\r\n        }\r\n    }\r\n\r\n    static formatColor(args, color) {\r\n        return args.map(a => `\\x1b[${color}m${util.format(a)}\\x1b[0m`);\r\n    }\r\n}\r\n\r\nColorConsole.log.bright = function () {\r\n    ColorConsole.writeNormal([...arguments], 97); // light white\r\n};\r\n\r\nColorConsole.info.bright = function () {\r\n    ColorConsole.writeNormal([...arguments], 93); // light cyan\r\n};\r\n\r\nColorConsole.success.bright = function () {\r\n    ColorConsole.writeNormal([...arguments], 92); // light green\r\n};\r\n\r\nColorConsole.warn.bright = function () {\r\n    ColorConsole.writeNormal([...arguments], 93); // light yellow\r\n};\r\n\r\nColorConsole.error.bright = function () {\r\n    ColorConsole.writeError([...arguments], 91); // light red\r\n};\r\n\r\nmodule.exports = {ColorConsole};\r\n"]},"metadata":{},"sourceType":"script"}