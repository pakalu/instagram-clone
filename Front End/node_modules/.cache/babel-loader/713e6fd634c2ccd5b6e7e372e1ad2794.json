{"ast":null,"code":"const util = require('util'); ///////////////////////////////////////////////////////\n// Returns {line, column} of an index within the text.\n\n\nfunction getIndexPos(text, index) {\n  let lineIdx = 0,\n      colIdx = index,\n      pos = 0;\n\n  do {\n    pos = text.indexOf('\\n', pos);\n\n    if (pos === -1 || index < pos + 1) {\n      break;\n    }\n\n    lineIdx++;\n    pos += 1;\n    colIdx = index - pos;\n  } while (pos < index);\n\n  return {\n    line: lineIdx + 1,\n    column: colIdx + 1\n  };\n} ///////////////////////////////////////////\n// Returns a space gap for console output.\n\n\nfunction messageGap(level) {\n  return ' '.repeat(level * 4);\n} ////////////////////////////////////////////////////\n// Type inspection\n\n\nfunction addInspection(type, cb) {\n  type[util.inspect.custom] = cb;\n}\n\nmodule.exports = {\n  getIndexPos,\n  messageGap,\n  addInspection\n};","map":{"version":3,"sources":["/Users/rafidhossain/Desktop/Instagram/instagram/Back End/node_modules/pg-minify/lib/utils.js"],"names":["util","require","getIndexPos","text","index","lineIdx","colIdx","pos","indexOf","line","column","messageGap","level","repeat","addInspection","type","cb","inspect","custom","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB,C,CAEA;AACA;;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;AAC9B,MAAIC,OAAO,GAAG,CAAd;AAAA,MAAiBC,MAAM,GAAGF,KAA1B;AAAA,MAAiCG,GAAG,GAAG,CAAvC;;AACA,KAAG;AACCA,IAAAA,GAAG,GAAGJ,IAAI,CAACK,OAAL,CAAa,IAAb,EAAmBD,GAAnB,CAAN;;AACA,QAAIA,GAAG,KAAK,CAAC,CAAT,IAAcH,KAAK,GAAGG,GAAG,GAAG,CAAhC,EAAmC;AAC/B;AACH;;AACDF,IAAAA,OAAO;AACPE,IAAAA,GAAG,IAAI,CAAP;AACAD,IAAAA,MAAM,GAAGF,KAAK,GAAGG,GAAjB;AACH,GARD,QAQSA,GAAG,GAAGH,KARf;;AASA,SAAO;AACHK,IAAAA,IAAI,EAAEJ,OAAO,GAAG,CADb;AAEHK,IAAAA,MAAM,EAAEJ,MAAM,GAAG;AAFd,GAAP;AAIH,C,CAED;AACA;;;AACA,SAASK,UAAT,CAAoBC,KAApB,EAA2B;AACvB,SAAO,IAAIC,MAAJ,CAAWD,KAAK,GAAG,CAAnB,CAAP;AACH,C,CAED;AACA;;;AACA,SAASE,aAAT,CAAuBC,IAAvB,EAA6BC,EAA7B,EAAiC;AAC7BD,EAAAA,IAAI,CAACf,IAAI,CAACiB,OAAL,CAAaC,MAAd,CAAJ,GAA4BF,EAA5B;AACH;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACblB,EAAAA,WADa;AAEbS,EAAAA,UAFa;AAGbG,EAAAA;AAHa,CAAjB","sourcesContent":["const util = require('util');\r\n\r\n///////////////////////////////////////////////////////\r\n// Returns {line, column} of an index within the text.\r\nfunction getIndexPos(text, index) {\r\n    let lineIdx = 0, colIdx = index, pos = 0;\r\n    do {\r\n        pos = text.indexOf('\\n', pos);\r\n        if (pos === -1 || index < pos + 1) {\r\n            break;\r\n        }\r\n        lineIdx++;\r\n        pos += 1;\r\n        colIdx = index - pos;\r\n    } while (pos < index);\r\n    return {\r\n        line: lineIdx + 1,\r\n        column: colIdx + 1\r\n    };\r\n}\r\n\r\n///////////////////////////////////////////\r\n// Returns a space gap for console output.\r\nfunction messageGap(level) {\r\n    return ' '.repeat(level * 4);\r\n}\r\n\r\n////////////////////////////////////////////////////\r\n// Type inspection\r\nfunction addInspection(type, cb) {\r\n    type[util.inspect.custom] = cb;\r\n}\r\n\r\nmodule.exports = {\r\n    getIndexPos,\r\n    messageGap,\r\n    addInspection\r\n};\r\n"]},"metadata":{},"sourceType":"script"}