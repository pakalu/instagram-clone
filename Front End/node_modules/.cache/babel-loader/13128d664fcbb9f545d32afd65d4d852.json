{"ast":null,"code":"var _jsxFileName = \"/Users/rafidhossain/Desktop/Instagram/instagram/Front End/src/providers/AuthContext.js\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { getFirebaseIdToken } from \"../utility/firebaseFunction\";\nimport firebase from \"../firebase\";\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({\n  children\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(null);\n\n  const updateUser = user => {\n    if (user) {\n      const {\n        email,\n        uid\n      } = user;\n      const lastLogin = user.metadata.lastLogin;\n      setCurrentUser({\n        email,\n        uid,\n        lastLogin\n      });\n      getFirebaseIdToken().then(token => {\n        setToken(token);\n        setLoading(false);\n      });\n    } else {\n      setCurrentUser(null);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(updateUser);\n    return unsubscribe;\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 24\n    }\n  }, \"loading....\");\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: (currentUser, token),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default AuthProvider;","map":{"version":3,"sources":["/Users/rafidhossain/Desktop/Instagram/instagram/Front End/src/providers/AuthContext.js"],"names":["React","createContext","useEffect","useState","getFirebaseIdToken","firebase","AuthContext","AuthProvider","children","loading","setLoading","currentUser","setCurrentUser","token","setToken","updateUser","user","email","uid","lastLogin","metadata","then","unsubscribe","auth","onAuthStateChanged"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD;AACA,SAAQC,kBAAR,QAAiC,6BAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAO,MAAMC,WAAW,GAAGL,aAAa,EAAjC;;AAEP,MAAMM,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMY,UAAU,GAAGC,IAAI,IAAG;AACtB,QAAGA,IAAH,EAAQ;AACJ,YAAM;AAACC,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAeF,IAArB;AACA,YAAMG,SAAS,GAAGH,IAAI,CAACI,QAAL,CAAcD,SAAhC;AACAP,MAAAA,cAAc,CAAC;AAACK,QAAAA,KAAD;AAAQC,QAAAA,GAAR;AAAaC,QAAAA;AAAb,OAAD,CAAd;AACAf,MAAAA,kBAAkB,GAAGiB,IAArB,CAA2BR,KAAD,IAAS;AAC/BC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAH,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAHD;AAIH,KARD,MAQK;AACDE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAbD;;AAcAR,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMoB,WAAW,GAAGjB,QAAQ,CAACkB,IAAT,GAAgBC,kBAAhB,CAAmCT,UAAnC,CAApB;AACA,WAAOO,WAAP;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAGb,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACZ,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,GAAEE,WAAW,EAAEE,KAAf,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,QADL,CADJ;AAKH,CA9BD;;AA+BA,eAAeD,YAAf","sourcesContent":["import React, {createContext, useEffect, useState} from \"react\"\nimport {getFirebaseIdToken} from \"../utility/firebaseFunction\"\nimport firebase from \"../firebase\"\n\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({children}) =>{\n    const [loading, setLoading] = useState(true)\n    const [currentUser, setCurrentUser] = useState(null)\n    const [token, setToken] = useState(null)\n\n    const updateUser = user =>{\n        if(user){\n            const {email, uid} = user\n            const lastLogin = user.metadata.lastLogin\n            setCurrentUser({email, uid, lastLogin})\n            getFirebaseIdToken().then((token)=>{\n                setToken(token)\n                setLoading(false)\n            })\n        }else{\n            setCurrentUser(null)\n            setLoading(false)\n        }\n    }\n    useEffect(()=>{\n        const unsubscribe = firebase.auth().onAuthStateChanged(updateUser)\n        return unsubscribe\n    }, [])\n\n    if(loading) return <div>loading....</div> \n    return(\n        <AuthContext.Provider value={currentUser, token}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\nexport default AuthProvider"]},"metadata":{},"sourceType":"module"}