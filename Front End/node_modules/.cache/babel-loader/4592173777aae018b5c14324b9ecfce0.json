{"ast":null,"code":"/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\n\n/**\r\n * @enum {number}\r\n * @alias queryResult\r\n * @readonly\r\n * @description\r\n * **Query Result Mask**\r\n *\r\n * Binary mask that represents the number of rows expected from a query method,\r\n * used by generic {@link Database#query query} method, plus {@link Database#func func}.\r\n *\r\n * The mask is always the last optional parameter, which defaults to `queryResult.any`.\r\n *\r\n * Any combination of flags is supported, except for `one + many`.\r\n *\r\n * The type is available from the library's root: `pgp.queryResult`.\r\n *\r\n * @see {@link Database#query Database.query}, {@link Database#func Database.func}\r\n */\nconst queryResult = {\n  /** Single row is expected, to be resolved as a single row-object. */\n  one: 1,\n\n  /** One or more rows expected, to be resolved as an array, with at least 1 row-object. */\n  many: 2,\n\n  /** Expecting no rows, to be resolved with `null`. */\n  none: 4,\n\n  /** `many|none` - any result is expected, to be resolved with an array of rows-objects. */\n  any: 6\n};\nmodule.exports = {\n  queryResult\n};","map":{"version":3,"sources":["/Users/rafidhossain/Desktop/Instagram/instagram/Back End/node_modules/pg-promise/lib/query-result.js"],"names":["queryResult","one","many","none","any","module","exports"],"mappings":"AAAA;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;AAkBA,MAAMA,WAAW,GAAG;AAChB;AACAC,EAAAA,GAAG,EAAE,CAFW;;AAGhB;AACAC,EAAAA,IAAI,EAAE,CAJU;;AAKhB;AACAC,EAAAA,IAAI,EAAE,CANU;;AAOhB;AACAC,EAAAA,GAAG,EAAE;AARW,CAApB;AAWAC,MAAM,CAACC,OAAP,GAAiB;AAACN,EAAAA;AAAD,CAAjB","sourcesContent":["/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n * @alias queryResult\r\n * @readonly\r\n * @description\r\n * **Query Result Mask**\r\n *\r\n * Binary mask that represents the number of rows expected from a query method,\r\n * used by generic {@link Database#query query} method, plus {@link Database#func func}.\r\n *\r\n * The mask is always the last optional parameter, which defaults to `queryResult.any`.\r\n *\r\n * Any combination of flags is supported, except for `one + many`.\r\n *\r\n * The type is available from the library's root: `pgp.queryResult`.\r\n *\r\n * @see {@link Database#query Database.query}, {@link Database#func Database.func}\r\n */\r\nconst queryResult = {\r\n    /** Single row is expected, to be resolved as a single row-object. */\r\n    one: 1,\r\n    /** One or more rows expected, to be resolved as an array, with at least 1 row-object. */\r\n    many: 2,\r\n    /** Expecting no rows, to be resolved with `null`. */\r\n    none: 4,\r\n    /** `many|none` - any result is expected, to be resolved with an array of rows-objects. */\r\n    any: 6\r\n};\r\n\r\nmodule.exports = {queryResult};\r\n"]},"metadata":{},"sourceType":"script"}