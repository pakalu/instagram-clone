{"ast":null,"code":"const npm = {\n  utils: require('./utils'),\n  batch: require('./ext/batch'),\n  page: require('./ext/page'),\n  sequence: require('./ext/sequence'),\n  stream: require('./ext/stream'),\n  errors: require('./errors')\n};\n/**\r\n * @module spex\r\n * @summary Specialized Promise Extensions\r\n * @author Vitaly Tomilov\r\n *\r\n * @description\r\n * Attaches to an external promise library and provides additional methods built solely\r\n * on the basic promise operations:\r\n *  - construct a new promise with a callback function\r\n *  - resolve a promise with some result data\r\n *  - reject a promise with a reason\r\n *\r\n * ### usage\r\n * For any third-party promise library:\r\n * ```js\r\n * const promise = require('bluebird');\r\n * const spex = require('spex')(promise);\r\n * ```\r\n * For ES6 promises:\r\n * ```js\r\n * const spex = require('spex')(Promise);\r\n * ```\r\n *\r\n * @param {Object|Function} promiseLib\r\n * Instance of a promise library to be used by this module.\r\n *\r\n * Some implementations use `Promise` constructor to create a new promise, while\r\n * others use the module's function for it. Both types are supported the same.\r\n *\r\n * Alternatively, an object of type {@link PromiseAdapter} can be passed in, which provides\r\n * compatibility with any promise library outside of the standard.\r\n *\r\n * Passing in a promise library that cannot be recognized will throw\r\n * `Invalid promise library specified.`\r\n *\r\n * @returns {Object}\r\n * Namespace with all supported methods.\r\n *\r\n * @see {@link PromiseAdapter}, {@link batch}, {@link page}, {@link sequence}, {@link stream}\r\n */\n\nfunction main(promiseLib) {\n  const spex = {},\n        // library instance;\n  promise = parsePromiseLib(promiseLib); // promise library parsing;\n\n  const config = {\n    spex: spex,\n    promise: promise,\n    utils: npm.utils(promise)\n  };\n  spex.errors = npm.errors;\n  spex.batch = npm.batch(config);\n  spex.page = npm.page(config);\n  spex.sequence = npm.sequence(config);\n  spex.stream = npm.stream(config);\n  config.utils.extend(spex, '$p', promise);\n  Object.freeze(spex);\n  return spex;\n} //////////////////////////////////////////\n// Parses and validates a promise library;\n\n\nfunction parsePromiseLib(lib) {\n  if (lib) {\n    let promise;\n\n    if (lib instanceof main.PromiseAdapter) {\n      promise = function (func) {\n        return lib.create(func);\n      };\n\n      promise.resolve = lib.resolve;\n      promise.reject = lib.reject;\n      return promise;\n    }\n\n    const t = typeof lib;\n\n    if (t === 'function' || t === 'object') {\n      const Root = typeof lib.Promise === 'function' ? lib.Promise : lib;\n\n      promise = function (func) {\n        return new Root(func);\n      };\n\n      promise.resolve = Root.resolve;\n      promise.reject = Root.reject;\n\n      if (typeof promise.resolve === 'function' && typeof promise.reject === 'function') {\n        return promise;\n      }\n    }\n  }\n\n  throw new TypeError('Invalid promise library specified.');\n}\n\nmain.PromiseAdapter = require('./adapter');\nmain.errors = npm.errors;\nObject.freeze(main);\nmodule.exports = main;\n/**\r\n * @external Error\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\r\n */\n\n/**\r\n * @external TypeError\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\r\n */\n\n/**\r\n * @external Promise\r\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise\r\n */","map":{"version":3,"sources":["/Users/rafidhossain/Desktop/Instagram/instagram/Back End/node_modules/spex/lib/index.js"],"names":["npm","utils","require","batch","page","sequence","stream","errors","main","promiseLib","spex","promise","parsePromiseLib","config","extend","Object","freeze","lib","PromiseAdapter","func","create","resolve","reject","t","Root","Promise","TypeError","module","exports"],"mappings":"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","sourcesContent":["const npm = {\r\n    utils: require('./utils'),\r\n    batch: require('./ext/batch'),\r\n    page: require('./ext/page'),\r\n    sequence: require('./ext/sequence'),\r\n    stream: require('./ext/stream'),\r\n    errors: require('./errors')\r\n};\r\n\r\n/**\r\n * @module spex\r\n * @summary Specialized Promise Extensions\r\n * @author Vitaly Tomilov\r\n *\r\n * @description\r\n * Attaches to an external promise library and provides additional methods built solely\r\n * on the basic promise operations:\r\n *  - construct a new promise with a callback function\r\n *  - resolve a promise with some result data\r\n *  - reject a promise with a reason\r\n *\r\n * ### usage\r\n * For any third-party promise library:\r\n * ```js\r\n * const promise = require('bluebird');\r\n * const spex = require('spex')(promise);\r\n * ```\r\n * For ES6 promises:\r\n * ```js\r\n * const spex = require('spex')(Promise);\r\n * ```\r\n *\r\n * @param {Object|Function} promiseLib\r\n * Instance of a promise library to be used by this module.\r\n *\r\n * Some implementations use `Promise` constructor to create a new promise, while\r\n * others use the module's function for it. Both types are supported the same.\r\n *\r\n * Alternatively, an object of type {@link PromiseAdapter} can be passed in, which provides\r\n * compatibility with any promise library outside of the standard.\r\n *\r\n * Passing in a promise library that cannot be recognized will throw\r\n * `Invalid promise library specified.`\r\n *\r\n * @returns {Object}\r\n * Namespace with all supported methods.\r\n *\r\n * @see {@link PromiseAdapter}, {@link batch}, {@link page}, {@link sequence}, {@link stream}\r\n */\r\nfunction main(promiseLib) {\r\n\r\n    const spex = {}, // library instance;\r\n        promise = parsePromiseLib(promiseLib); // promise library parsing;\r\n\r\n    const config = {\r\n        spex: spex,\r\n        promise: promise,\r\n        utils: npm.utils(promise)\r\n    };\r\n\r\n    spex.errors = npm.errors;\r\n    spex.batch = npm.batch(config);\r\n    spex.page = npm.page(config);\r\n    spex.sequence = npm.sequence(config);\r\n    spex.stream = npm.stream(config);\r\n\r\n    config.utils.extend(spex, '$p', promise);\r\n\r\n    Object.freeze(spex);\r\n\r\n    return spex;\r\n}\r\n\r\n//////////////////////////////////////////\r\n// Parses and validates a promise library;\r\nfunction parsePromiseLib(lib) {\r\n    if (lib) {\r\n        let promise;\r\n        if (lib instanceof main.PromiseAdapter) {\r\n            promise = function (func) {\r\n                return lib.create(func);\r\n            };\r\n            promise.resolve = lib.resolve;\r\n            promise.reject = lib.reject;\r\n            return promise;\r\n        }\r\n        const t = typeof lib;\r\n        if (t === 'function' || t === 'object') {\r\n            const Root = typeof lib.Promise === 'function' ? lib.Promise : lib;\r\n            promise = function (func) {\r\n                return new Root(func);\r\n            };\r\n            promise.resolve = Root.resolve;\r\n            promise.reject = Root.reject;\r\n            if (typeof promise.resolve === 'function' && typeof promise.reject === 'function') {\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    throw new TypeError('Invalid promise library specified.');\r\n}\r\n\r\nmain.PromiseAdapter = require('./adapter');\r\nmain.errors = npm.errors;\r\n\r\nObject.freeze(main);\r\n\r\nmodule.exports = main;\r\n\r\n/**\r\n * @external Error\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\r\n */\r\n\r\n/**\r\n * @external TypeError\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\r\n */\r\n\r\n/**\r\n * @external Promise\r\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise\r\n */\r\n"]},"metadata":{},"sourceType":"script"}