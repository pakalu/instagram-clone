{"ast":null,"code":"/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\nconst {\n  QueryResultError,\n  queryResultErrorCode\n} = require(`./query-result-error`);\n\nconst {\n  PreparedStatementError\n} = require(`./prepared-statement-error`);\n\nconst {\n  ParameterizedQueryError\n} = require(`./parameterized-query-error`);\n\nconst {\n  QueryFileError\n} = require(`./query-file-error`);\n/**\r\n * @namespace errors\r\n * @description\r\n * Error types namespace, available as `pgp.errors`, before and after initializing the library.\r\n *\r\n * @property {function} PreparedStatementError\r\n * {@link errors.PreparedStatementError PreparedStatementError} class constructor.\r\n *\r\n * Represents all errors that can be reported by class {@link PreparedStatement}.\r\n *\r\n * @property {function} ParameterizedQueryError\r\n * {@link errors.ParameterizedQueryError ParameterizedQueryError} class constructor.\r\n *\r\n * Represents all errors that can be reported by class {@link ParameterizedQuery}.\r\n *\r\n * @property {function} QueryFileError\r\n * {@link errors.QueryFileError QueryFileError} class constructor.\r\n *\r\n * Represents all errors that can be reported by class {@link QueryFile}.\r\n *\r\n * @property {function} QueryResultError\r\n * {@link errors.QueryResultError QueryResultError} class constructor.\r\n *\r\n * Represents all result-specific errors from query methods.\r\n *\r\n * @property {errors.queryResultErrorCode} queryResultErrorCode\r\n * Error codes `enum` used by class {@link errors.QueryResultError QueryResultError}.\r\n *\r\n */\n\n\nmodule.exports = {\n  QueryResultError,\n  queryResultErrorCode,\n  PreparedStatementError,\n  ParameterizedQueryError,\n  QueryFileError\n};","map":{"version":3,"sources":["/Users/rafidhossain/Desktop/Instagram/instagram/Back End/node_modules/pg-promise/lib/errors/index.js"],"names":["QueryResultError","queryResultErrorCode","require","PreparedStatementError","ParameterizedQueryError","QueryFileError","module","exports"],"mappings":"AAAA;;;;;;;;AASA,MAAM;AAACA,EAAAA,gBAAD;AAAmBC,EAAAA;AAAnB,IAA2CC,OAAO,CAAE,sBAAF,CAAxD;;AACA,MAAM;AAACC,EAAAA;AAAD,IAA2BD,OAAO,CAAE,4BAAF,CAAxC;;AACA,MAAM;AAACE,EAAAA;AAAD,IAA4BF,OAAO,CAAE,6BAAF,CAAzC;;AACA,MAAM;AAACG,EAAAA;AAAD,IAAmBH,OAAO,CAAE,oBAAF,CAAhC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BAI,MAAM,CAACC,OAAP,GAAiB;AACbP,EAAAA,gBADa;AAEbC,EAAAA,oBAFa;AAGbE,EAAAA,sBAHa;AAIbC,EAAAA,uBAJa;AAKbC,EAAAA;AALa,CAAjB","sourcesContent":["/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {QueryResultError, queryResultErrorCode} = require(`./query-result-error`);\r\nconst {PreparedStatementError} = require(`./prepared-statement-error`);\r\nconst {ParameterizedQueryError} = require(`./parameterized-query-error`);\r\nconst {QueryFileError} = require(`./query-file-error`);\r\n\r\n/**\r\n * @namespace errors\r\n * @description\r\n * Error types namespace, available as `pgp.errors`, before and after initializing the library.\r\n *\r\n * @property {function} PreparedStatementError\r\n * {@link errors.PreparedStatementError PreparedStatementError} class constructor.\r\n *\r\n * Represents all errors that can be reported by class {@link PreparedStatement}.\r\n *\r\n * @property {function} ParameterizedQueryError\r\n * {@link errors.ParameterizedQueryError ParameterizedQueryError} class constructor.\r\n *\r\n * Represents all errors that can be reported by class {@link ParameterizedQuery}.\r\n *\r\n * @property {function} QueryFileError\r\n * {@link errors.QueryFileError QueryFileError} class constructor.\r\n *\r\n * Represents all errors that can be reported by class {@link QueryFile}.\r\n *\r\n * @property {function} QueryResultError\r\n * {@link errors.QueryResultError QueryResultError} class constructor.\r\n *\r\n * Represents all result-specific errors from query methods.\r\n *\r\n * @property {errors.queryResultErrorCode} queryResultErrorCode\r\n * Error codes `enum` used by class {@link errors.QueryResultError QueryResultError}.\r\n *\r\n */\r\n\r\nmodule.exports = {\r\n    QueryResultError,\r\n    queryResultErrorCode,\r\n    PreparedStatementError,\r\n    ParameterizedQueryError,\r\n    QueryFileError\r\n};\r\n"]},"metadata":{},"sourceType":"script"}